{"version":3,"mappings":";q8BAEA,IAAIA,EAAIC,EAAmB,EAEzB,OAAAC,aAAqBF,EAAE,WACvBE,cAAsBF,EAAE,wBCA1B,MAAMG,EAAc,CAClB,MAAO,UACP,KAAM,UACN,KAAM,UACN,aAAc,SAChB,EAEMC,EAAgB,CACpB,MAAO,UACP,KAAM,UACN,KAAM,UACN,aAAc,SAChB,EAUaC,EAAiB,CAACC,EAAoB,UAAsB,CACvE,MAAMC,EAASD,IAAS,OA+MpB,IAAAE,EAAQC,EA7MS,CACnB,QAAS,CACP,KAAAH,EACA,QAASH,EACT,UAAWC,EACX,KAAM,CACJ,KAAM,SACR,EACA,QAAS,CACP,KAAM,SACR,EACA,QAAS,CACP,KAAM,SACR,EACA,MAAO,CACL,KAAM,SACR,EACA,WAAY,CACV,QAASG,EAAS,UAAY,UAC9B,MAAOA,EAAS,UAAY,SAC9B,EACA,KAAM,CACJ,QAASA,EAAS,UAAY,UAC9B,UAAWA,EAAS,UAAY,SAClC,EACA,QAASA,EAAS,UAAY,SAChC,EACA,WAAY,CACV,WAAY,gDACZ,gBAAiB,IACjB,kBAAmB,IACnB,iBAAkB,IAClB,eAAgB,IAChB,GAAI,CACF,SAAU,SACV,WAAY,IACZ,WAAY,GACd,EACA,GAAI,CACF,SAAU,OACV,WAAY,IACZ,WAAY,GACd,EACA,GAAI,CACF,SAAU,UACV,WAAY,IACZ,WAAY,GACd,EACA,GAAI,CACF,SAAU,SACV,WAAY,IACZ,WAAY,GACd,EACA,GAAI,CACF,SAAU,UACV,WAAY,IACZ,WAAY,GACd,EACA,GAAI,CACF,SAAU,OACV,WAAY,IACZ,WAAY,GACd,EACA,UAAW,CACT,SAAU,OACV,WAAY,GACd,EACA,UAAW,CACT,SAAU,WACV,WAAY,GACd,EACA,MAAO,CACL,SAAU,OACV,WAAY,GACd,EACA,MAAO,CACL,SAAU,WACV,WAAY,GACd,EACA,OAAQ,CACN,cAAe,OACf,WAAY,IAEhB,EACA,MAAO,CACL,aAAc,CAChB,EACA,QAAS,CACP,OACA,wGACA,wGACA,yGACA,0GACA,0GACA,wGACA,0GACA,yGACA,2GACA,6GACA,6GACA,6GACA,6GACA,6GACA,+GACA,6GACA,+GACA,8GACA,+GACA,+GACA,+GACA,+GACA,+GACA,8GACF,EACA,WAAY,CACV,eAAgB,CACd,eAAgB,CACd,KAAM,CACJ,eAAgB,QAClB,EACA,yBAA0B,CACxB,OAAQ,EACR,QAAS,CACX,EACA,uBAAwB,CACtB,eAAgB,iBAClB,EACA,KAAM,CACJ,gBAAiBA,EAAS,UAAY,UACtC,MAAOA,EAAS,UAAY,UAC9B,CAEJ,EACA,UAAW,CACT,eAAgB,CACd,KAAM,CACJ,aAAc,EACd,QAAS,WACT,UAAW,OACX,UAAW,CACT,UAAWA,EAAS,OAAS,iCAEjC,EACA,UAAW,CACT,UAAW,CACT,UAAWA,EAAS,OAAS,iCAC/B,CACF,CAEJ,EACA,QAAS,CACP,eAAgB,CACd,KAAM,CACJ,aAAc,GACd,UAAWA,EACP,iCACA,kCACN,CAEJ,EACA,SAAU,CACR,eAAgB,CACd,QAAS,CACP,aAAc,GAChB,CAEJ,EACA,aAAc,CACZ,eAAgB,CACd,KAAM,CACJ,2BAA4B,CAC1B,aAAc,EAChB,CACF,CAEJ,EACA,QAAS,CACP,eAAgB,CACd,KAAM,CACJ,aAAc,GAChB,CAEJ,EACA,UAAW,CACT,eAAgB,CACd,KAAM,CACJ,UAAWA,EACP,OACA,iCACN,CAEJ,EACA,UAAW,CACT,aAAc,CACZ,MAAO,aACT,EACA,eAAgB,CACd,KAAM,CACJ,UAAW,OACb,CACF,CACF,CAEJ,CAEoC,EAGpC,OAAAC,EAAQE,EAAoBF,CAAK,EAE1BA,CACT,ECpOMG,EAAeC,gBAA4C,MAAS,EAQ7DC,EAA8C,CAAC,CAAE,SAAAC,KAAe,CAE3E,MAAMC,EAAkB,OAAO,WAAW,8BAA8B,EAAE,QACpEC,EAAiB,aAAa,QAAQ,UAAU,EAChDC,EAAkBD,IAAmB,KACvCA,IAAmB,OACnBD,EAEE,CAACG,EAAUC,CAAW,EAAIC,WAAkBH,CAAe,EAG3DT,EAAQH,EAAea,EAAW,OAAS,OAAO,EAGlDG,EAAiB,IAAM,CACfF,EAAAG,GAAQ,CAACA,CAAI,CAC3B,EAGAC,mBAAU,IAAM,CACd,aAAa,QAAQ,WAAY,OAAOL,CAAQ,CAAC,EAG3C,MAAAM,EAAiB,SAAS,cAAc,0BAA0B,EACpEA,GACaA,EAAA,aACb,UACAN,EAAWV,EAAM,QAAQ,WAAW,QAAU,SAChD,EAIEU,EACO,cAAK,UAAU,IAAI,WAAW,EAE9B,cAAK,UAAU,OAAO,WAAW,CAC5C,EACC,CAACA,EAAUV,CAAK,CAAC,EAGpBe,YAAU,IAAM,CACR,MAAAE,EAAa,OAAO,WAAW,8BAA8B,EAE7DC,EAAgBC,GAA2B,CAE3C,aAAa,QAAQ,UAAU,IAAM,MACvCR,EAAYQ,EAAE,OAAO,CAEzB,EAEW,OAAAF,EAAA,iBAAiB,SAAUC,CAAY,EAE3C,IAAM,CACAD,EAAA,oBAAoB,SAAUC,CAAY,CACvD,CACF,EAAG,EAAE,EAGHE,EAAA,IAACjB,EAAa,SAAb,CAAsB,MAAO,CAAE,SAAAO,EAAU,eAAAG,CAAe,EACvD,SAACQ,EAAA,KAAAC,EAAA,CAAiB,MAAAtB,EAChB,UAAAoB,EAAA,IAACG,EAAY,IACZjB,CAAA,EACH,CACF,EAEJ,EAGakB,GAAW,IAAwB,CACxC,MAAAC,EAAUC,aAAWvB,CAAY,EACvC,GAAIsB,IAAY,OACR,UAAI,MAAM,8CAA8C,EAEzD,OAAAA,CACT,ECjFME,EAAkBvB,gBAA+C,MAAS,EAG1EwB,EAAyBC,GAAoC,OAEjE,MAAMC,GAAYC,EAAA,SAAS,cAAc,yBAAyB,IAAhD,YAAAA,EAAmD,aAAa,WAClF,OAAID,EACK,CACL,GAAGD,EACH,eAAgBC,CAClB,EAEKD,CACT,EAGaG,EAAsD,CAAC,CAAE,SAAA1B,KAAe,CACnF,KAAM,CAAC2B,EAAUC,CAAW,EAAItB,WAAgC,IAAI,EAC9D,CAACuB,EAAeC,CAAgB,EAAIxB,WAAS,EAAK,EAClD,CAACyB,EAASC,CAAU,EAAI1B,WAAyB,IAAI,EACrD,CAAC2B,EAAOC,CAAQ,EAAI5B,WAAuB,IAAI,EAC/C,CAAC6B,EAAWC,CAAY,EAAI9B,WAAS,EAAI,EAiE/C,OA/DAG,YAAU,IAAM,EACa,SAAY,CACjC,IACF2B,EAAa,EAAI,EAGjB,MAAMC,EAAa,OAAe,IAC5BC,GAAcD,GAAA,YAAAA,EAAW,oBAAqB,GAC9CE,GAAkBF,GAAA,YAAAA,EAAW,yBAA0B,GAEzD,IAACC,GAAe,CAACC,EACb,UAAI,MAAM,gEAAgE,EAI5E,MAAAnD,EAASoD,EAAaF,EAAaC,EAAiB,CACxD,KAAM,CACJ,iBAAkB,GAClB,eAAgB,GAChB,mBAAoB,EACtB,EACA,OAAQ,CACN,QAASjB,EAAsB,CAC7B,gBAAiB,gBAClB,GACH,CACD,EAGK,CAAE,KAAAmB,EAAM,MAAOC,GAAiB,MAAMtD,EAAO,KAAK,WAAW,EAE/DsD,EACM,aAAK,yBAA0BA,EAAa,OAAO,EAE3DV,EAAWS,EAAK,OAAO,EAIzB,KAAM,CAAE,KAAM,CAAE,aAAAE,CAAe,GAAIvD,EAAO,KAAK,kBAC7C,CAACwD,GAAQC,IAAe,CACtBb,EAAWa,CAAU,EAEzB,EAEA,OAAAjB,EAAYxC,CAAM,EAClB0C,EAAiB,EAAI,EAGd,IAAM,CACXa,EAAa,YAAY,CAC3B,QACOG,EAAK,CACJ,cAAM,+BAAgCA,CAAG,EACjDZ,EAASY,aAAe,MAAQA,EAAM,IAAI,MAAM,+BAA+B,CAAC,SAChF,CACAV,EAAa,EAAK,EAEtB,GAEmB,CACrB,EAAG,EAAE,EAGDD,EAEApB,EAAA,KAACgC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,OAAQ,QACR,IAAK,CACP,EAEA,UAACjC,MAAAkC,EAAA,CAAiB,KAAM,GAAI,QAC3BC,EAAA,CAAW,QAAQ,KAAK,SAAyB,+BACpD,EAKAhB,EAEAlB,EAAA,KAACgC,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,OAAQ,QACR,EAAG,CACL,EAEA,UAAChC,OAAAmC,EAAA,CAAM,SAAS,QAAQ,GAAI,CAAE,GAAI,EAAG,MAAO,OAAQ,SAAU,KAC5D,gBAACD,EAAA,CAAW,QAAQ,KAAK,SAAgB,qBACxCnC,EAAA,IAAAmC,EAAA,CAAW,QAAQ,QAAS,WAAM,OAAQ,IAC7C,QACCA,EAAA,CAAW,QAAQ,QAAQ,SAE5B,0DACF,EAKA,CAACpB,GAAiB,CAACF,EAEnBb,EAAA,IAACiC,EAAA,CACC,GAAI,CACF,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,OACV,EAEA,eAACC,EAAiB,IACpB,EAKDlC,MAAAO,EAAgB,SAAhB,CAAyB,MAAO,CAAE,SAAAM,EAAU,cAAAE,EAAe,QAAAE,EAAS,MAAAE,CAClE,WAAAjC,CAAA,CACH,CAEJ,EAGamD,EAAc,IAAM,CACzB,MAAAhC,EAAUC,aAAWC,CAAe,EAC1C,GAAIF,IAAY,OACR,UAAI,MAAM,oDAAoD,EAE/D,OAAAA,CACT,EChJMiC,GAActD,gBAA2C,MAAS,EAG3DuD,GAAwD,CAAC,CAAE,SAAArD,KAAe,CAC/E,MAAE,SAAA2B,CAAS,EAAIwB,EAAY,EAC3B,CAACG,EAAMC,CAAO,EAAIjD,WAAsB,IAAI,EAC5C,CAACkD,EAASC,CAAU,EAAInD,WAAS,EAAI,EAG3CG,YAAU,IAAM,EACO,SAAY,CAC3B,IACFgD,EAAW,EAAI,EAGT,MAAE,KAAM,CAAE,QAAA1B,CAAA,CAAc,QAAMJ,EAAS,KAAK,WAAW,EAE7D,GAAII,GAAA,MAAAA,EAAS,KAAM,CAEjB,KAAM,CAAE,KAAAU,EAAM,MAAAR,GAAU,MAAMN,EAC3B,KAAK,OAAO,EACZ,OAAO,GAAG,EACV,GAAG,KAAMI,EAAQ,KAAK,EAAE,EACxB,OAAO,EAENE,GACM,cAAM,+BAAgCA,CAAK,EACnDsB,EAAQ,IAAI,GAEJA,EAAA,CACN,GAAId,EAAK,GACT,MAAOA,EAAK,MACZ,YAAaA,EAAK,aAClB,SAAUA,EAAK,UACf,iBAAkBA,EAAK,oBACvB,YAAaA,EAAK,aAAe,CAC/B,mBAAoB,GACpB,kBAAmB,GACrB,CACD,CACH,MAEAc,EAAQ,IAAI,QAEPtB,EAAO,CACN,cAAM,0BAA2BA,CAAK,EAC9CsB,EAAQ,IAAI,SACZ,CACAE,EAAW,EAAK,EAEpB,GAEa,EAGb,KAAM,CAAE,KAAM,CAAE,aAAAd,CAAe,GAAIhB,EAAS,KAAK,kBAC/C,MAAO+B,EAAO3B,IAAY,CACpB,GAAA2B,IAAU,cAAe3B,GAAA,MAAAA,EAAS,MAAM,CAE1C,KAAM,CAAE,KAAAU,EAAM,MAAAR,GAAU,MAAMN,EAC3B,KAAK,OAAO,EACZ,OAAO,GAAG,EACV,GAAG,KAAMI,EAAQ,KAAK,EAAE,EACxB,OAAO,EAENE,GACM,cAAM,+BAAgCA,CAAK,EACnDsB,EAAQ,IAAI,GAEJA,EAAA,CACN,GAAId,EAAK,GACT,MAAOA,EAAK,MACZ,YAAaA,EAAK,aAClB,SAAUA,EAAK,UACf,iBAAkBA,EAAK,oBACvB,YAAaA,EAAK,aAAe,CAC/B,mBAAoB,GACpB,kBAAmB,GACrB,CACD,CACH,MACSiB,IAAU,cACnBH,EAAQ,IAAI,CACd,CAEJ,EAEA,MAAO,IAAM,CACXZ,EAAa,YAAY,CAC3B,GACC,CAAChB,CAAQ,CAAC,EA8Gb,MAAMgC,EAAQ,CACZ,KAAAL,EACA,QAAAE,EACA,OA9Ga,MAAOI,EAAeC,IAAqB,CACpD,IACF,KAAM,CAAE,MAAA5B,CAAM,EAAI,MAAMN,EAAS,KAAK,mBAAmB,CACvD,MAAAiC,EACA,SAAAC,CAAA,CACD,EAED,GAAI5B,EAAa,MAAAA,QACVA,EAAO,CACN,oBAAM,oBAAqBA,CAAK,EAClCA,CAAA,CAEV,EAmGE,OAhGa,MAAO2B,EAAeC,EAAkBC,IAAwB,CACzE,IAEF,KAAM,CAAE,KAAArB,EAAM,MAAAR,CAAA,EAAU,MAAMN,EAAS,KAAK,OAAO,CACjD,MAAAiC,EACA,SAAAC,EACA,QAAS,CACP,KAAM,CACJ,aAAcC,CAAA,CAChB,CACF,CACD,EAED,GAAI7B,EAAa,MAAAA,EAGjB,GAAIQ,EAAK,KAAM,CACP,MAAE,MAAOsB,GAAiB,MAAMpC,EACnC,KAAK,OAAO,EACZ,OAAO,CACN,GAAIc,EAAK,KAAK,GACd,MAAOA,EAAK,KAAK,MACjB,aAAcqB,EACd,WAAY,IAAI,KAAK,EAAE,YAAY,EACpC,EAEH,GAAIC,EAAoB,MAAAA,CAAA,QAEnB9B,EAAO,CACN,oBAAM,oBAAqBA,CAAK,EAClCA,CAAA,CAEV,EAiEE,QA9Dc,SAAY,CACtB,IACF,KAAM,CAAE,MAAAA,CAAM,EAAI,MAAMN,EAAS,KAAK,QAAQ,EAC9C,GAAIM,EAAa,MAAAA,QACVA,EAAO,CACN,oBAAM,qBAAsBA,CAAK,EACnCA,CAAA,CAEV,EAuDE,cApDoB,MAAO2B,GAAkB,CACzC,IACF,KAAM,CAAE,MAAA3B,CAAM,EAAI,MAAMN,EAAS,KAAK,sBAAsBiC,CAAK,EACjE,GAAI3B,EAAa,MAAAA,QACVA,EAAO,CACN,oBAAM,4BAA6BA,CAAK,EAC1CA,CAAA,CAEV,EA6CE,kBA1CwB,MAAOQ,GAAwB,CACnD,IACF,GAAI,CAACa,EAAY,UAAI,MAAM,mBAAmB,EAG9C,GAAIb,EAAK,YAAa,CACpB,KAAM,CAAE,MAAAR,GAAU,MAAMN,EAAS,KAAK,WAAW,CAC/C,KAAM,CAAE,aAAcc,EAAK,WAAY,EACxC,EAED,GAAIR,EAAaA,OAAA,CAIb,MAAE,MAAAA,GAAU,MAAMN,EACrB,KAAK,OAAO,EACZ,OAAO,CACN,aAAcc,EAAK,YACnB,UAAWA,EAAK,SAChB,oBAAqBA,EAAK,iBAC1B,YAAaA,EAAK,YAClB,WAAY,IAAI,KAAK,EAAE,YAAY,CACpC,GACA,GAAG,KAAMa,EAAK,EAAE,EAEnB,GAAIrB,EAAa,MAAAA,EAGTsB,EAAA/C,GAAQA,EAAO,CAAE,GAAGA,EAAM,GAAGiC,GAAS,IAAI,QAC3CR,EAAO,CACN,oBAAM,0BAA2BA,CAAK,EACxCA,CAAA,CAEV,CAUA,EAEA,OACGnB,MAAAsC,GAAY,SAAZ,CAAqB,MAAAO,EACnB,SAAA3D,CACH,EAEJ,ECxOMgE,EAAOC,OAAK,IAAMC,EAAA,WAAO,oBAAc,+BAAC,EACxCC,GAAQF,OAAK,IAAMC,EAAA,WAAO,qBAAe,iCAAC,EAC1CE,GAASH,OAAK,IAAMC,EAAA,WAAO,sBAAgB,iCAAC,EAC5CG,GAAUJ,OAAK,IAAMC,EAAA,WAAO,uBAAiB,+BAAC,EAC9CI,EAAOL,OAAK,IAAMC,EAAA,WAAO,oBAAc,kCAAC,EACxCK,GAAcN,OAAK,IAAMC,EAAA,WAAO,2BAAqB,mCAAC,EACtDM,GAAYP,OAAK,IAAMC,EAAA,WAAO,yBAAmB,gCAAC,EAClDO,GAAUR,OAAK,IAAMC,EAAA,WAAO,uBAAiB,gCAAC,EAC9CQ,EAAWT,OAAK,IAAMC,EAAA,WAAO,wBAAkB,gCAAC,EAChDS,GAAWV,OAAK,UAAM,OAAO,wBAA8B,gCAAC,EAG5DW,GAAkB,IACtB9D,MAACiC,GAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,SAAU,WAAY,SAAU,OAAQ,OAAQ,EAC1F,eAACC,EAAiB,MAAM,EAAI,GAC9B,EAGF,SAAS6B,IAAM,CACb,OACG/D,MAAAY,EAAA,CACC,SAACZ,MAAAf,EAAA,CACC,eAACsD,GACC,UAAAvC,MAACgE,EACC,UAAAhE,MAACiE,YAAS,SAAUjE,MAAC8D,GAAgB,IACnC,gBAACI,EAEC,WAAAlE,MAACmE,GAAM,KAAK,IAAI,QAASnE,MAACkD,GAAK,GAAI,QAGlCiB,EAAM,MAAK,aAAa,QAASnE,MAACkD,GAAK,GAAI,QAG3CiB,EAAM,MAAK,aAAa,QAASnE,MAACuD,IAAQ,GAAI,QAC9CY,EAAM,MAAK,gBAAgB,QAASnE,MAACyD,IAAY,GAAI,QACrDU,EAAM,MAAK,wBAAwB,QAASnE,MAACwD,GAAK,GAAI,QACtDW,EAAM,MAAK,QAAQ,QAASnE,MAACwD,GAAK,GAAI,QACtCW,EAAM,MAAK,eAAe,QAASnE,MAAC0D,IAAU,GAAI,QAClDS,EAAM,MAAK,aAAa,QAASnE,MAAC2D,IAAQ,GAAI,QAG9CQ,EAAM,MAAK,SAAS,QAASnE,MAACqD,IAAM,GAAI,QACxCc,EAAM,MAAK,UAAU,QAASnE,MAACsD,IAAO,GAAI,QAC1Ca,EAAM,MAAK,WAAW,QAASnE,MAAC4D,GAAS,GAAI,QAC7CO,EAAM,MAAK,YAAY,QAASnE,MAAC4D,GAAS,GAAI,QAG9CO,EAAM,MAAK,IAAI,QAASnE,EAAA,IAAC6D,KAAS,CAAI,IACzC,CACF,GACF,CACF,GACF,CACF,EAEJ,CC5DA,MAAMnD,GAAY,OAAO,WAAW,EAC9B0D,EAAU,SAAS,cAAc,MAAM,EAC7CA,EAAQ,KAAO,aACfA,EAAQ,QAAU1D,GAClB,SAAS,KAAK,YAAY0D,CAAO,EAGjC,MAAMC,EAAO,SAAS,eAAe,MAAM,EAEvCA,EACFC,EAAA,WAAWD,CAAI,EAAE,OACdrE,EAAA,IAAAuE,EAAA,YACC,SAACvE,MAAA+D,GAAA,EAAI,CACP,EACF,EAEA,QAAQ,MAAM,yDAAyD","names":["m","require$$0","client","primaryBlue","secondaryTeal","createAppTheme","mode","isDark","theme","createTheme","responsiveFontSizes","ThemeContext","createContext","ThemeProvider","children","prefersDarkMode","storedDarkMode","initialDarkMode","darkMode","setDarkMode","useState","toggleDarkMode","prev","useEffect","metaThemeColor","mediaQuery","handleChange","e","jsx","jsxs","MuiThemeProvider","CssBaseline","useTheme","context","useContext","SupabaseContext","addCSRFTokenToHeaders","headers","csrfToken","_a","SupabaseProvider","supabase","setSupabase","isInitialized","setIsInitialized","session","setSession","error","setError","isLoading","setIsLoading","windowEnv","supabaseUrl","supabaseAnonKey","createClient","data","sessionError","subscription","_event","newSession","err","Box","CircularProgress","Typography","Alert","useSupabase","AuthContext","AuthProvider","user","setUser","loading","setLoading","event","value","email","password","displayName","profileError","Home","lazy","__vitePreload","Login","Signup","Journal","Chat","ChatHistory","Resources","Prompts","Settings","NotFound","LoadingFallback","App","Router","Suspense","Routes","Route","metaTag","root","createRoot","StrictMode"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/theme/index.ts","../../src/contexts/ThemeContext.tsx","../../src/contexts/SupabaseContext.tsx","../../src/contexts/AuthContext.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createTheme, responsiveFontSizes } from '@mui/material/styles';\nimport type { Theme as MuiTheme } from '@mui/material/styles';\nimport type { PaletteMode } from '@mui/material';\n\n// EchoMind color palette\nconst primaryBlue = {\n  light: '#7a9fd3',\n  main: '#4A6FA5',\n  dark: '#2a4875',\n  contrastText: '#ffffff',\n};\n\nconst secondaryTeal = {\n  light: '#7ad3d3',\n  main: '#47B8B8',\n  dark: '#2a8787',\n  contrastText: '#ffffff',\n};\n\nconst tertiaryLavender = {\n  light: '#bdb5f7',\n  main: '#9D8DF1',\n  dark: '#7062d0',\n  contrastText: '#ffffff',\n};\n\n// Create theme function\nexport const createAppTheme = (mode: PaletteMode = 'light'): MuiTheme => {\n  const isDark = mode === 'dark';\n\n  const themeOptions = {\n    palette: {\n      mode,\n      primary: primaryBlue,\n      secondary: secondaryTeal,\n      info: {\n        main: '#2196F3',\n      },\n      success: {\n        main: '#4CAF50',\n      },\n      warning: {\n        main: '#FFC107',\n      },\n      error: {\n        main: '#F44336',\n      },\n      background: {\n        default: isDark ? '#121212' : '#F8F9FA',\n        paper: isDark ? '#1E1E1E' : '#FFFFFF',\n      },\n      text: {\n        primary: isDark ? '#E0E0E0' : '#333333',\n        secondary: isDark ? '#AAAAAA' : '#757575',\n      },\n      divider: isDark ? '#424242' : '#E0E0E0',\n    },\n    typography: {\n      fontFamily: '\"Open Sans\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeightLight: 300,\n      fontWeightRegular: 400,\n      fontWeightMedium: 600,\n      fontWeightBold: 700,\n      h1: {\n        fontSize: '2.5rem',\n        fontWeight: 600,\n        lineHeight: 1.2,\n      },\n      h2: {\n        fontSize: '2rem',\n        fontWeight: 600,\n        lineHeight: 1.3,\n      },\n      h3: {\n        fontSize: '1.75rem',\n        fontWeight: 600,\n        lineHeight: 1.4,\n      },\n      h4: {\n        fontSize: '1.5rem',\n        fontWeight: 600,\n        lineHeight: 1.4,\n      },\n      h5: {\n        fontSize: '1.25rem',\n        fontWeight: 600,\n        lineHeight: 1.4,\n      },\n      h6: {\n        fontSize: '1rem',\n        fontWeight: 600,\n        lineHeight: 1.4,\n      },\n      subtitle1: {\n        fontSize: '1rem',\n        fontWeight: 500,\n      },\n      subtitle2: {\n        fontSize: '0.875rem',\n        fontWeight: 500,\n      },\n      body1: {\n        fontSize: '1rem',\n        lineHeight: 1.6,\n      },\n      body2: {\n        fontSize: '0.875rem',\n        lineHeight: 1.6,\n      },\n      button: {\n        textTransform: 'none',\n        fontWeight: 600,\n      },\n    },\n    shape: {\n      borderRadius: 8,\n    },\n    shadows: [\n      'none',\n      '0px 2px 1px -1px rgba(0,0,0,0.05), 0px 1px 1px 0px rgba(0,0,0,0.03), 0px 1px 3px 0px rgba(0,0,0,0.05)',\n      '0px 3px 3px -2px rgba(0,0,0,0.06), 0px 2px 6px 0px rgba(0,0,0,0.04), 0px 1px 8px 0px rgba(0,0,0,0.06)',\n      '0px 3px 4px -2px rgba(0,0,0,0.07), 0px 3px 8px 0px rgba(0,0,0,0.05), 0px 1px 12px 0px rgba(0,0,0,0.07)',\n      '0px 4px 5px -2px rgba(0,0,0,0.08), 0px 4px 10px 0px rgba(0,0,0,0.06), 0px 1px 14px 0px rgba(0,0,0,0.08)',\n      '0px 5px 6px -3px rgba(0,0,0,0.09), 0px 5px 12px 0px rgba(0,0,0,0.07), 0px 1px 18px 0px rgba(0,0,0,0.09)',\n      '0px 6px 7px -4px rgba(0,0,0,0.1), 0px 6px 14px 0px rgba(0,0,0,0.08), 0px 1px 20px 0px rgba(0,0,0,0.1)',\n      '0px 7px 8px -4px rgba(0,0,0,0.11), 0px 7px 16px 0px rgba(0,0,0,0.09), 0px 2px 22px 0px rgba(0,0,0,0.11)',\n      '0px 8px 9px -5px rgba(0,0,0,0.12), 0px 8px 18px 0px rgba(0,0,0,0.1), 0px 3px 24px 0px rgba(0,0,0,0.12)',\n      '0px 9px 10px -6px rgba(0,0,0,0.13), 0px 9px 20px 0px rgba(0,0,0,0.11), 0px 4px 26px 0px rgba(0,0,0,0.13)',\n      '0px 10px 11px -6px rgba(0,0,0,0.14), 0px 10px 22px 0px rgba(0,0,0,0.12), 0px 5px 28px 0px rgba(0,0,0,0.14)',\n      '0px 11px 12px -7px rgba(0,0,0,0.15), 0px 11px 24px 0px rgba(0,0,0,0.13), 0px 6px 30px 0px rgba(0,0,0,0.15)',\n      '0px 12px 13px -8px rgba(0,0,0,0.16), 0px 12px 26px 0px rgba(0,0,0,0.14), 0px 7px 32px 0px rgba(0,0,0,0.16)',\n      '0px 13px 14px -8px rgba(0,0,0,0.17), 0px 13px 28px 0px rgba(0,0,0,0.15), 0px 8px 34px 0px rgba(0,0,0,0.17)',\n      '0px 14px 15px -9px rgba(0,0,0,0.18), 0px 14px 30px 0px rgba(0,0,0,0.16), 0px 9px 36px 0px rgba(0,0,0,0.18)',\n      '0px 15px 16px -10px rgba(0,0,0,0.19), 0px 15px 32px 0px rgba(0,0,0,0.17), 0px 10px 38px 0px rgba(0,0,0,0.19)',\n      '0px 16px 17px -10px rgba(0,0,0,0.2), 0px 16px 34px 0px rgba(0,0,0,0.18), 0px 11px 40px 0px rgba(0,0,0,0.2)',\n      '0px 17px 18px -11px rgba(0,0,0,0.21), 0px 17px 36px 0px rgba(0,0,0,0.19), 0px 12px 42px 0px rgba(0,0,0,0.21)',\n      '0px 18px 19px -12px rgba(0,0,0,0.22), 0px 18px 38px 0px rgba(0,0,0,0.2), 0px 13px 44px 0px rgba(0,0,0,0.22)',\n      '0px 19px 20px -12px rgba(0,0,0,0.23), 0px 19px 40px 0px rgba(0,0,0,0.21), 0px 14px 46px 0px rgba(0,0,0,0.23)',\n      '0px 20px 21px -13px rgba(0,0,0,0.24), 0px 20px 42px 0px rgba(0,0,0,0.22), 0px 15px 48px 0px rgba(0,0,0,0.24)',\n      '0px 21px 22px -14px rgba(0,0,0,0.25), 0px 21px 44px 0px rgba(0,0,0,0.23), 0px 16px 50px 0px rgba(0,0,0,0.25)',\n      '0px 22px 23px -14px rgba(0,0,0,0.26), 0px 22px 46px 0px rgba(0,0,0,0.24), 0px 17px 52px 0px rgba(0,0,0,0.26)',\n      '0px 23px 24px -15px rgba(0,0,0,0.27), 0px 23px 48px 0px rgba(0,0,0,0.25), 0px 18px 54px 0px rgba(0,0,0,0.27)',\n      '0px 24px 25px -16px rgba(0,0,0,0.28), 0px 24px 50px 0px rgba(0,0,0,0.26), 0px 19px 56px 0px rgba(0,0,0,0.28)',\n    ],\n    components: {\n      MuiCssBaseline: {\n        styleOverrides: {\n          html: {\n            scrollBehavior: 'smooth',\n          },\n          '*, *::before, *::after': {\n            margin: 0,\n            padding: 0,\n          },\n          'a, a:link, a:visited': {\n            textDecoration: 'none !important',\n          },\n          body: {\n            backgroundColor: isDark ? '#121212' : '#F8F9FA',\n            color: isDark ? '#E0E0E0' : '#333333',\n          },\n        },\n      },\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            borderRadius: 8,\n            padding: '8px 16px',\n            boxShadow: 'none',\n            '&:hover': {\n              boxShadow: isDark ? 'none' : '0px 2px 4px rgba(0, 0, 0, 0.1)',\n            },\n          },\n          contained: {\n            '&:hover': {\n              boxShadow: isDark ? 'none' : '0px 2px 4px rgba(0, 0, 0, 0.2)',\n            },\n          },\n        },\n      },\n      MuiCard: {\n        styleOverrides: {\n          root: {\n            borderRadius: 12,\n            boxShadow: isDark\n              ? '0px 2px 8px rgba(0, 0, 0, 0.2)'\n              : '0px 2px 8px rgba(0, 0, 0, 0.05)',\n          },\n        },\n      },\n      MuiPaper: {\n        styleOverrides: {\n          rounded: {\n            borderRadius: 12,\n          },\n        },\n      },\n      MuiTextField: {\n        styleOverrides: {\n          root: {\n            '& .MuiOutlinedInput-root': {\n              borderRadius: 8,\n            },\n          },\n        },\n      },\n      MuiChip: {\n        styleOverrides: {\n          root: {\n            borderRadius: 16,\n          },\n        },\n      },\n      MuiAvatar: {\n        styleOverrides: {\n          root: {\n            boxShadow: isDark\n              ? 'none'\n              : '0px 2px 4px rgba(0, 0, 0, 0.1)',\n          },\n        },\n      },\n      MuiAppBar: {\n        defaultProps: {\n          color: 'transparent',\n        },\n        styleOverrides: {\n          root: {\n            boxShadow: 'none',\n          },\n        },\n      },\n    },\n  };\n\n  let theme = createTheme(themeOptions);\n\n  // Make fonts responsive\n  theme = responsiveFontSizes(theme);\n\n  return theme;\n};\n\nexport default createAppTheme;\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\r\nimport type { PaletteMode } from '@mui/material';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { createAppTheme } from '../theme';\r\n\r\n// Define the context type\r\ninterface ThemeContextType {\r\n  darkMode: boolean;\r\n  toggleDarkMode: () => void;\r\n}\r\n\r\n// Create the context\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\n// Provider component props\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Provider component\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  // Check if dark mode is stored in localStorage or use system preference\r\n  const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  const storedDarkMode = localStorage.getItem('darkMode');\r\n  const initialDarkMode = storedDarkMode !== null\r\n    ? storedDarkMode === 'true'\r\n    : prefersDarkMode;\r\n\r\n  const [darkMode, setDarkMode] = useState<boolean>(initialDarkMode);\r\n\r\n  // Create theme based on dark mode state\r\n  const theme = createAppTheme(darkMode ? 'dark' : 'light');\r\n\r\n  // Toggle dark mode\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(prev => !prev);\r\n  };\r\n\r\n  // Update localStorage when dark mode changes\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', String(darkMode));\r\n\r\n    // Update meta theme-color\r\n    const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\r\n    if (metaThemeColor) {\r\n      metaThemeColor.setAttribute(\r\n        'content',\r\n        darkMode ? theme.palette.background.default : '#ffffff'\r\n      );\r\n    }\r\n\r\n    // Add or remove dark class from body\r\n    if (darkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode, theme]);\r\n\r\n  // Listen for system preference changes\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n\r\n    const handleChange = (e: MediaQueryListEvent) => {\r\n      // Only update if user hasn't manually set a preference\r\n      if (localStorage.getItem('darkMode') === null) {\r\n        setDarkMode(e.matches);\r\n      }\r\n    };\r\n\r\n    mediaQuery.addEventListener('change', handleChange);\r\n\r\n    return () => {\r\n      mediaQuery.removeEventListener('change', handleChange);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the theme context\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default ThemeProvider;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\nimport type { Session } from '@supabase/supabase-js';\nimport { CircularProgress, Box, Typography, Alert } from '@mui/material';\n\n// Define the context type\ninterface SupabaseContextType {\n  supabase: SupabaseClient;\n  isInitialized: boolean;\n  session: Session | null;\n  error: Error | null;\n}\n\n// Create the context with a default value\nconst SupabaseContext = createContext<SupabaseContextType | undefined>(undefined);\n\n// Helper function to add CSRF protection to headers\nconst addCSRFTokenToHeaders = (headers: Record<string, string>) => {\n  // Get CSRF token from meta tag\n  const csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n  if (csrfToken) {\n    return {\n      ...headers,\n      'X-CSRF-Token': csrfToken,\n    };\n  }\n  return headers;\n};\n\n// Provider component\nexport const SupabaseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [supabase, setSupabase] = useState<SupabaseClient | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [session, setSession] = useState<Session | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeSupabase = async () => {\n      try {\n        setIsLoading(true);\n\n        // Get environment variables - try window.ENV first, then fallback to import.meta.env\n        const windowEnv = (window as any).ENV;\n        const supabaseUrl = windowEnv?.VITE_SUPABASE_URL || import.meta.env.VITE_SUPABASE_URL as string;\n        const supabaseAnonKey = windowEnv?.VITE_SUPABASE_ANON_KEY || import.meta.env.VITE_SUPABASE_ANON_KEY as string;\n\n        if (!supabaseUrl || !supabaseAnonKey) {\n          throw new Error('Supabase URL or Anon Key is missing from environment variables');\n        }\n\n        // Create Supabase client with enhanced security\n        const client = createClient(supabaseUrl, supabaseAnonKey, {\n          auth: {\n            autoRefreshToken: true,\n            persistSession: true,\n            detectSessionInUrl: true\n          },\n          global: {\n            headers: addCSRFTokenToHeaders({\n              'X-Client-Info': 'EchoMind/1.0.0',\n            }),\n          },\n        });\n\n        // Get initial session\n        const { data, error: sessionError } = await client.auth.getSession();\n\n        if (sessionError) {\n          console.warn('Error getting session:', sessionError.message);\n        } else {\n          setSession(data.session);\n        }\n\n        // Set up auth state change listener\n        const { data: { subscription } } = client.auth.onAuthStateChange(\n          (_event, newSession) => {\n            setSession(newSession);\n          }\n        );\n\n        setSupabase(client);\n        setIsInitialized(true);\n\n        // Clean up subscription on unmount\n        return () => {\n          subscription.unsubscribe();\n        };\n      } catch (err) {\n        console.error('Error initializing Supabase:', err);\n        setError(err instanceof Error ? err : new Error('Failed to initialize Supabase'));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeSupabase();\n  }, []);\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh',\n          gap: 2\n        }}\n      >\n        <CircularProgress size={60} />\n        <Typography variant=\"h6\">Connecting to EchoMind...</Typography>\n      </Box>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh',\n          p: 3\n        }}\n      >\n        <Alert severity=\"error\" sx={{ mb: 2, width: '100%', maxWidth: 500 }}>\n          <Typography variant=\"h6\">Connection Error</Typography>\n          <Typography variant=\"body1\">{error.message}</Typography>\n        </Alert>\n        <Typography variant=\"body2\">\n          Please check your internet connection and try again.\n        </Typography>\n      </Box>\n    );\n  }\n\n  // Only render children when Supabase is initialized\n  if (!isInitialized || !supabase) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100vh'\n        }}\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <SupabaseContext.Provider value={{ supabase, isInitialized, session, error }}>\n      {children}\n    </SupabaseContext.Provider>\n  );\n};\n\n// Custom hook to use the Supabase context\nexport const useSupabase = () => {\n  const context = useContext(SupabaseContext);\n  if (context === undefined) {\n    throw new Error('useSupabase must be used within a SupabaseProvider');\n  }\n  return context;\n};\n\nexport default SupabaseProvider;\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useSupabase } from './SupabaseContext';\n\n// Define user type\ninterface User {\n  id: string;\n  email: string;\n  displayName: string | null;\n  photoURL: string | null;\n  userGeminiApiKey: string | null;\n  preferences: {\n    emailNotifications: boolean;\n    pushNotifications: boolean;\n  };\n}\n\n// Define context type\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string, displayName: string) => Promise<void>;\n  signOut: () => Promise<void>;\n  resetPassword: (email: string) => Promise<void>;\n  updateUserProfile: (data: Partial<User>) => Promise<void>;\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const { supabase } = useSupabase();\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing session on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      try {\n        setLoading(true);\n        \n        // Get current session\n        const { data: { session } } = await supabase.auth.getSession();\n        \n        if (session?.user) {\n          // Get user profile data\n          const { data, error } = await supabase\n            .from('users')\n            .select('*')\n            .eq('id', session.user.id)\n            .single();\n          \n          if (error) {\n            console.error('Error fetching user profile:', error);\n            setUser(null);\n          } else {\n            setUser({\n              id: data.id,\n              email: data.email,\n              displayName: data.display_name,\n              photoURL: data.photo_url,\n              userGeminiApiKey: data.user_gemini_api_key,\n              preferences: data.preferences || {\n                emailNotifications: true,\n                pushNotifications: true\n              }\n            });\n          }\n        } else {\n          setUser(null);\n        }\n      } catch (error) {\n        console.error('Error checking session:', error);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkSession();\n    \n    // Subscribe to auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        if (event === 'SIGNED_IN' && session?.user) {\n          // Get user profile data\n          const { data, error } = await supabase\n            .from('users')\n            .select('*')\n            .eq('id', session.user.id)\n            .single();\n          \n          if (error) {\n            console.error('Error fetching user profile:', error);\n            setUser(null);\n          } else {\n            setUser({\n              id: data.id,\n              email: data.email,\n              displayName: data.display_name,\n              photoURL: data.photo_url,\n              userGeminiApiKey: data.user_gemini_api_key,\n              preferences: data.preferences || {\n                emailNotifications: true,\n                pushNotifications: true\n              }\n            });\n          }\n        } else if (event === 'SIGNED_OUT') {\n          setUser(null);\n        }\n      }\n    );\n    \n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [supabase]);\n\n  // Sign in with email and password\n  const signIn = async (email: string, password: string) => {\n    try {\n      const { error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      \n      if (error) throw error;\n    } catch (error) {\n      console.error('Error signing in:', error);\n      throw error;\n    }\n  };\n\n  // Sign up with email and password\n  const signUp = async (email: string, password: string, displayName: string) => {\n    try {\n      // Create auth user\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            display_name: displayName\n          }\n        }\n      });\n      \n      if (error) throw error;\n      \n      // Create user profile\n      if (data.user) {\n        const { error: profileError } = await supabase\n          .from('users')\n          .insert({\n            id: data.user.id,\n            email: data.user.email,\n            display_name: displayName,\n            created_at: new Date().toISOString()\n          });\n        \n        if (profileError) throw profileError;\n      }\n    } catch (error) {\n      console.error('Error signing up:', error);\n      throw error;\n    }\n  };\n\n  // Sign out\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n    } catch (error) {\n      console.error('Error signing out:', error);\n      throw error;\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (email: string) => {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email);\n      if (error) throw error;\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      throw error;\n    }\n  };\n\n  // Update user profile\n  const updateUserProfile = async (data: Partial<User>) => {\n    try {\n      if (!user) throw new Error('No user logged in');\n      \n      // Update auth metadata if needed\n      if (data.displayName) {\n        const { error } = await supabase.auth.updateUser({\n          data: { display_name: data.displayName }\n        });\n        \n        if (error) throw error;\n      }\n      \n      // Update profile in database\n      const { error } = await supabase\n        .from('users')\n        .update({\n          display_name: data.displayName,\n          photo_url: data.photoURL,\n          user_gemini_api_key: data.userGeminiApiKey,\n          preferences: data.preferences,\n          updated_at: new Date().toISOString()\n        })\n        .eq('id', user.id);\n      \n      if (error) throw error;\n      \n      // Update local state\n      setUser(prev => prev ? { ...prev, ...data } : null);\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updateUserProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n","import { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { Box, CircularProgress } from '@mui/material';\nimport './App.css';\n\n// Context Providers\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { SupabaseProvider } from './contexts/SupabaseContext';\nimport { AuthProvider } from './contexts/AuthContext';\n\n// Lazy-loaded components\nconst Home = lazy(() => import('./pages/Home'));\nconst Login = lazy(() => import('./pages/Login'));\nconst Signup = lazy(() => import('./pages/Signup'));\nconst Journal = lazy(() => import('./pages/Journal'));\nconst Chat = lazy(() => import('./pages/Chat'));\nconst ChatHistory = lazy(() => import('./pages/ChatHistory'));\nconst Resources = lazy(() => import('./pages/Resources'));\nconst Prompts = lazy(() => import('./pages/Prompts'));\nconst Settings = lazy(() => import('./pages/Settings'));\nconst NotFound = lazy(() => import('./components/common/NotFound'));\n\n// Loading component\nconst LoadingFallback = () => (\n  <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n    <CircularProgress size={60} />\n  </Box>\n);\n\nfunction App() {\n  return (\n    <SupabaseProvider>\n      <ThemeProvider>\n        <AuthProvider>\n          <Router>\n            <Suspense fallback={<LoadingFallback />}>\n              <Routes>\n                {/* Home route */}\n                <Route path=\"/\" element={<Home />} />\n\n                {/* Dashboard route */}\n                <Route path=\"/dashboard\" element={<Home />} />\n\n                {/* Feature routes */}\n                <Route path=\"/journal/*\" element={<Journal />} />\n                <Route path=\"/chat/history\" element={<ChatHistory />} />\n                <Route path=\"/chat/:conversationId\" element={<Chat />} />\n                <Route path=\"/chat\" element={<Chat />} />\n                <Route path=\"/resources/*\" element={<Resources />} />\n                <Route path=\"/prompts/*\" element={<Prompts />} />\n\n                {/* Auth routes */}\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/signup\" element={<Signup />} />\n                <Route path=\"/profile\" element={<Settings />} />\n                <Route path=\"/settings\" element={<Settings />} />\n\n                {/* 404 Page - This must be the last route */}\n                <Route path=\"*\" element={<NotFound />} />\n              </Routes>\n            </Suspense>\n          </Router>\n        </AuthProvider>\n      </ThemeProvider>\n    </SupabaseProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n// Add CSRF token meta tag for security\nconst csrfToken = crypto.randomUUID();\nconst metaTag = document.createElement('meta');\nmetaTag.name = 'csrf-token';\nmetaTag.content = csrfToken;\ndocument.head.appendChild(metaTag);\n\n// Initialize the app\nconst root = document.getElementById('root');\n\nif (root) {\n  createRoot(root).render(\n    <StrictMode>\n      <App />\n    </StrictMode>\n  );\n} else {\n  console.error('Root element not found. Cannot mount React application.');\n}\n"],"file":"assets/index-DnHAAhUv.js"}