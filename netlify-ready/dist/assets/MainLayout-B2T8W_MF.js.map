{"version":3,"file":"MainLayout-B2T8W_MF.js","sources":["../../src/layouts/MainLayout.tsx"],"sourcesContent":["import React, { ReactNode, useState } from 'react';\nimport { \n  AppBar, \n  Box, \n  Toolbar, \n  IconButton, \n  Typography, \n  Drawer, \n  List, \n  ListItem, \n  ListItemIcon, \n  ListItemText, \n  Divider, \n  Container, \n  useMediaQuery, \n  useTheme as useMuiTheme,\n  Tooltip,\n  Avatar,\n  Menu,\n  MenuItem,\n  Button\n} from '@mui/material';\nimport {\n  Menu as MenuIcon,\n  Dashboard as DashboardIcon,\n  Book as JournalIcon,\n  Chat as ChatIcon,\n  LibraryBooks as ResourcesIcon,\n  Lightbulb as PromptIcon,\n  Settings as SettingsIcon,\n  Brightness4 as DarkModeIcon,\n  Brightness7 as LightModeIcon,\n  Person as PersonIcon,\n  Logout as LogoutIcon,\n  Login as LoginIcon\n} from '@mui/icons-material';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { useSupabase } from '../contexts/SupabaseContext';\n\ninterface MainLayoutProps {\n  children: ReactNode;\n}\n\nconst drawerWidth = 240;\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  const { darkMode, toggleDarkMode } = useTheme();\n  const { supabase, session } = useSupabase();\n  const muiTheme = useMuiTheme();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isMobile = useMediaQuery(muiTheme.breakpoints.down('md'));\n  \n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  \n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  \n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleProfileMenuClose = () => {\n    setAnchorEl(null);\n  };\n  \n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    handleProfileMenuClose();\n    navigate('/login');\n  };\n  \n  const menuItems = [\n    { text: 'Dashboard', icon: <DashboardIcon />, path: '/dashboard' },\n    { text: 'Journal', icon: <JournalIcon />, path: '/journal' },\n    { text: 'Chat', icon: <ChatIcon />, path: '/chat' },\n    { text: 'Resources', icon: <ResourcesIcon />, path: '/resources' },\n    { text: 'Daily Prompts', icon: <PromptIcon />, path: '/prompts' },\n    { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n  ];\n  \n  const drawer = (\n    <div>\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 'bold' }}>\n          EchoMind\n        </Typography>\n      </Box>\n      <Divider />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem \n            button \n            key={item.text} \n            component={Link} \n            to={item.path}\n            selected={location.pathname === item.path}\n            onClick={() => isMobile && setMobileOpen(false)}\n            sx={{\n              borderRadius: '8px',\n              mx: 1,\n              my: 0.5,\n              '&.Mui-selected': {\n                backgroundColor: darkMode \n                  ? 'rgba(74, 111, 165, 0.2)' \n                  : 'rgba(74, 111, 165, 0.1)',\n                '&:hover': {\n                  backgroundColor: darkMode \n                    ? 'rgba(74, 111, 165, 0.3)' \n                    : 'rgba(74, 111, 165, 0.2)',\n                },\n              },\n              '&:hover': {\n                backgroundColor: darkMode \n                  ? 'rgba(74, 111, 165, 0.1)' \n                  : 'rgba(74, 111, 165, 0.05)',\n              },\n            }}\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n  \n  return (\n    <Box sx={{ display: 'flex' }}>\n      <AppBar \n        position=\"fixed\" \n        sx={{ \n          zIndex: (theme) => theme.zIndex.drawer + 1,\n          backgroundColor: darkMode ? '#1E1E1E' : '#FFFFFF',\n          color: darkMode ? '#E0E0E0' : '#333333',\n          boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.05)',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { md: 'none' } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n          >\n            EchoMind\n          </Typography>\n          \n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Tooltip title={darkMode ? 'Light Mode' : 'Dark Mode'}>\n              <IconButton onClick={toggleDarkMode} color=\"inherit\">\n                {darkMode ? <LightModeIcon /> : <DarkModeIcon />}\n              </IconButton>\n            </Tooltip>\n            \n            {session ? (\n              <>\n                <Tooltip title=\"Account\">\n                  <IconButton\n                    onClick={handleProfileMenuOpen}\n                    size=\"small\"\n                    sx={{ ml: 2 }}\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                  >\n                    <Avatar sx={{ width: 32, height: 32, bgcolor: 'primary.main' }}>\n                      {session.user.email?.charAt(0).toUpperCase() || 'U'}\n                    </Avatar>\n                  </IconButton>\n                </Tooltip>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={Boolean(anchorEl)}\n                  onClose={handleProfileMenuClose}\n                >\n                  <MenuItem \n                    onClick={() => {\n                      handleProfileMenuClose();\n                      navigate('/profile');\n                    }}\n                  >\n                    <ListItemIcon>\n                      <PersonIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText>Profile</ListItemText>\n                  </MenuItem>\n                  <MenuItem onClick={handleLogout}>\n                    <ListItemIcon>\n                      <LogoutIcon fontSize=\"small\" />\n                    </ListItemIcon>\n                    <ListItemText>Logout</ListItemText>\n                  </MenuItem>\n                </Menu>\n              </>\n            ) : (\n              <Button\n                color=\"inherit\"\n                startIcon={<LoginIcon />}\n                onClick={() => navigate('/login')}\n              >\n                Login\n              </Button>\n            )}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      \n      <Box\n        component=\"nav\"\n        sx={{ width: { md: drawerWidth }, flexShrink: { md: 0 } }}\n      >\n        {/* Mobile drawer */}\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile\n          }}\n          sx={{\n            display: { xs: 'block', md: 'none' },\n            '& .MuiDrawer-paper': { \n              boxSizing: 'border-box', \n              width: drawerWidth,\n              backgroundColor: darkMode ? '#1E1E1E' : '#FFFFFF',\n              color: darkMode ? '#E0E0E0' : '#333333',\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n        \n        {/* Desktop drawer */}\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: 'none', md: 'block' },\n            '& .MuiDrawer-paper': { \n              boxSizing: 'border-box', \n              width: drawerWidth,\n              backgroundColor: darkMode ? '#1E1E1E' : '#FFFFFF',\n              color: darkMode ? '#E0E0E0' : '#333333',\n              borderRight: darkMode ? '1px solid #333' : '1px solid #e0e0e0',\n            },\n          }}\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n      \n      <Box\n        component=\"main\"\n        sx={{ \n          flexGrow: 1, \n          p: 3, \n          width: { md: `calc(100% - ${drawerWidth}px)` },\n          backgroundColor: darkMode ? '#121212' : '#F8F9FA',\n          minHeight: '100vh',\n        }}\n      >\n        <Toolbar />\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n          {children}\n        </Container>\n      </Box>\n    </Box>\n  );\n};\n\nexport default MainLayout;\n"],"names":["drawerWidth","MainLayout","children","darkMode","toggleDarkMode","useTheme","supabase","session","useSupabase","muiTheme","useMuiTheme","navigate","useNavigate","location","useLocation","isMobile","useMediaQuery","mobileOpen","setMobileOpen","useState","anchorEl","setAnchorEl","handleDrawerToggle","handleProfileMenuOpen","event","handleProfileMenuClose","handleLogout","menuItems","DashboardIcon","JournalIcon","ChatIcon","ResourcesIcon","PromptIcon","SettingsIcon","drawer","jsx","Box","Typography","Divider","List","item","jsxs","ListItem","Link","ListItemIcon","ListItemText","AppBar","theme","Toolbar","IconButton","MenuIcon","Tooltip","LightModeIcon","DarkModeIcon","Fragment","Avatar","_a","Menu","MenuItem","PersonIcon","LogoutIcon","Button","LoginIcon","Drawer","Container"],"mappings":"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"}