{"version":3,"file":"Login-9f5a5voh.js","sources":["../../src/pages/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  Container,\n  Alert,\n  Link as MuiLink,\n  CircularProgress,\n  InputAdornment,\n  IconButton\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSupabase } from '../contexts/SupabaseContext';\nimport MainLayout from '../layouts/MainLayout';\nimport * as authService from '../services/authService';\n\nconst Login: React.FC = () => {\n  const { supabase } = useSupabase();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      setError('Please enter both email and password');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const data = await authService.signIn(email, password);\n\n      if (data.user) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to login. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDemoLogin = async () => {\n    setEmail('demo@echomind.com');\n    setPassword('demo123456');\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      const data = await authService.signIn('demo@echomind.com', 'demo123456');\n\n      if (data.user) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      console.error('Demo login error:', err);\n      setError('Demo account login failed. Please try regular login.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <MainLayout>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n            Login to EchoMind\n          </Typography>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleLogin} sx={{ mt: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              margin=\"normal\"\n              required\n              autoFocus\n              disabled={loading}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              margin=\"normal\"\n              required\n              disabled={loading}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={loading}\n            >\n              {loading ? <CircularProgress size={24} /> : 'Login'}\n            </Button>\n\n            <Button\n              fullWidth\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleDemoLogin}\n              sx={{ mb: 2 }}\n              disabled={loading}\n            >\n              Try Demo Account\n            </Button>\n\n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Typography variant=\"body2\">\n                Don't have an account?{' '}\n                <MuiLink component={Link} to=\"/signup\" underline=\"hover\">\n                  Sign up\n                </MuiLink>\n              </Typography>\n\n              <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                <MuiLink component={Link} to=\"/forgot-password\" underline=\"hover\">\n                  Forgot password?\n                </MuiLink>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default Login;\n"],"names":["Login","supabase","useSupabase","navigate","useNavigate","email","setEmail","useState","password","setPassword","showPassword","setShowPassword","loading","setLoading","error","setError","handleLogin","e","authService.signIn","err","handleDemoLogin","MainLayout","jsx","Container","jsxs","Paper","Typography","Alert","Box","TextField","InputAdornment","IconButton","VisibilityOff","Visibility","Button","CircularProgress","MuiLink","Link"],"mappings":"0VAoBA,MAAMA,EAAkB,IAAM,CACtB,KAAA,CAAE,SAAAC,CAAS,EAAIC,EAAY,EAC3BC,EAAWC,EAAY,EAEvB,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAS,EAAE,EAC/B,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,EAAE,EACrC,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,EAAK,EAChD,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAK,EACtC,CAACO,EAAOC,CAAQ,EAAIR,EAAAA,SAAwB,IAAI,EAEhDS,EAAc,MAAOC,GAAuB,CAG5C,GAFJA,EAAE,eAAe,EAEb,CAACZ,GAAS,CAACG,EAAU,CACvBO,EAAS,sCAAsC,EAC/C,MAAA,CAGE,GAAA,CACFF,EAAW,EAAI,EACfE,EAAS,IAAI,GAEA,MAAMG,EAAmBb,EAAOG,CAAQ,GAE5C,MACPL,EAAS,YAAY,QAEhBgB,EAAK,CACJ,QAAA,MAAM,eAAgBA,CAAG,EACjCJ,EAASI,aAAe,MAAQA,EAAI,QAAU,oCAAoC,CAAA,QAClF,CACAN,EAAW,EAAK,CAAA,CAEpB,EAEMO,EAAkB,SAAY,CAClCd,EAAS,mBAAmB,EAC5BG,EAAY,YAAY,EAEpB,GAAA,CACFI,EAAW,EAAI,EACfE,EAAS,IAAI,GAEA,MAAMG,EAAmB,oBAAqB,YAAY,GAE9D,MACPf,EAAS,YAAY,QAEhBgB,EAAK,CACJ,QAAA,MAAM,oBAAqBA,CAAG,EACtCJ,EAAS,sDAAsD,CAAA,QAC/D,CACAF,EAAW,EAAK,CAAA,CAEpB,EAEA,aACGQ,EACC,CAAA,SAAAC,EAAAA,IAACC,EAAU,CAAA,SAAS,KAClB,SAACC,EAAAA,KAAAC,EAAA,CAAM,UAAW,EAAG,GAAI,CAAE,EAAG,EAAG,GAAI,CACnC,EAAA,SAAA,CAACH,EAAAA,IAAAI,EAAA,CAAW,QAAQ,KAAK,UAAU,KAAK,MAAM,SAAS,aAAY,GAAC,SAEpE,mBAAA,CAAA,EAECZ,GACEQ,EAAA,IAAAK,EAAA,CAAM,SAAS,QAAQ,GAAI,CAAE,GAAI,CAAE,EACjC,SACHb,CAAA,CAAA,EAGFU,EAAAA,KAACI,EAAI,CAAA,UAAU,OAAO,SAAUZ,EAAa,GAAI,CAAE,GAAI,CAAA,EACrD,SAAA,CAAAM,EAAA,IAACO,EAAA,CACC,UAAS,GACT,MAAM,QACN,KAAK,QACL,MAAOxB,EACP,SAAWY,GAAMX,EAASW,EAAE,OAAO,KAAK,EACxC,OAAO,SACP,SAAQ,GACR,UAAS,GACT,SAAUL,CAAA,CACZ,EAEAU,EAAA,IAACO,EAAA,CACC,UAAS,GACT,MAAM,WACN,KAAMnB,EAAe,OAAS,WAC9B,MAAOF,EACP,SAAWS,GAAMR,EAAYQ,EAAE,OAAO,KAAK,EAC3C,OAAO,SACP,SAAQ,GACR,SAAUL,EACV,WAAY,CACV,aACEU,EAAA,IAACQ,EAAe,CAAA,SAAS,MACvB,SAAAR,EAAA,IAACS,EAAA,CACC,QAAS,IAAMpB,EAAgB,CAACD,CAAY,EAC5C,KAAK,MAEJ,SAAeA,EAAAY,MAACU,EAAc,CAAA,CAAA,QAAMC,EAAW,CAAA,CAAA,CAAA,CAAA,CAEpD,CAAA,CAAA,CAEJ,CACF,EAEAX,EAAA,IAACY,EAAA,CACC,KAAK,SACL,UAAS,GACT,QAAQ,YACR,MAAM,UACN,KAAK,QACL,GAAI,CAAE,GAAI,EAAG,GAAI,CAAE,EACnB,SAAUtB,EAET,SAAUA,EAAAU,MAACa,EAAiB,CAAA,KAAM,GAAI,EAAK,OAAA,CAC9C,EAEAb,EAAA,IAACY,EAAA,CACC,UAAS,GACT,QAAQ,WACR,MAAM,UACN,KAAK,QACL,QAASd,EACT,GAAI,CAAE,GAAI,CAAE,EACZ,SAAUR,EACX,SAAA,kBAAA,CAED,EAEAY,OAACI,GAAI,GAAI,CAAE,GAAI,EAAG,UAAW,QAC3B,EAAA,SAAA,CAACJ,EAAAA,KAAAE,EAAA,CAAW,QAAQ,QAAQ,SAAA,CAAA,yBACH,IACvBJ,EAAAA,IAACc,GAAQ,UAAWC,EAAM,GAAG,UAAU,UAAU,QAAQ,SAEzD,SAAA,CAAA,CAAA,EACF,QAECX,EAAW,CAAA,QAAQ,QAAQ,GAAI,CAAE,GAAI,CAAE,EACtC,SAACJ,EAAAA,IAAAc,EAAA,CAAQ,UAAWC,EAAM,GAAG,mBAAmB,UAAU,QAAQ,4BAElE,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ"}