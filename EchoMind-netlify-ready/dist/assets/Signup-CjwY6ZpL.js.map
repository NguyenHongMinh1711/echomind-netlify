{"version":3,"file":"Signup-CjwY6ZpL.js","sources":["../../src/pages/Signup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  Container,\n  Alert,\n  Link as MuiLink,\n  CircularProgress,\n  InputAdornment,\n  IconButton,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSupabase } from '../contexts/SupabaseContext';\nimport MainLayout from '../layouts/MainLayout';\nimport * as authService from '../services/authService';\n\nconst Signup: React.FC = () => {\n  const { supabase } = useSupabase();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [agreeTerms, setAgreeTerms] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleSignup = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Validation\n    if (!email || !password || !confirmPassword) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    if (password.length < 6) {\n      setError('Password must be at least 6 characters long');\n      return;\n    }\n\n    if (!agreeTerms) {\n      setError('You must agree to the terms and conditions');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      await authService.signUp(email, password);\n\n      setSuccess('Registration successful! Please check your email to confirm your account.');\n      // Don't navigate immediately, let the user see the success message\n      setTimeout(() => {\n        navigate('/login');\n      }, 5000);\n    } catch (err) {\n      console.error('Signup error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to sign up. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <MainLayout>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} sx={{ p: 4, mt: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\n            Create an Account\n          </Typography>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 3 }}>\n              {error}\n            </Alert>\n          )}\n\n          {success && (\n            <Alert severity=\"success\" sx={{ mb: 3 }}>\n              {success}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSignup} sx={{ mt: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              margin=\"normal\"\n              required\n              autoFocus\n              disabled={loading || !!success}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              margin=\"normal\"\n              required\n              disabled={loading || !!success}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Confirm Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              margin=\"normal\"\n              required\n              disabled={loading || !!success}\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={agreeTerms}\n                  onChange={(e) => setAgreeTerms(e.target.checked)}\n                  color=\"primary\"\n                  disabled={loading || !!success}\n                />\n              }\n              label={\n                <Typography variant=\"body2\">\n                  I agree to the{' '}\n                  <MuiLink component={Link} to=\"/terms\" underline=\"hover\">\n                    Terms and Conditions\n                  </MuiLink>{' '}\n                  and{' '}\n                  <MuiLink component={Link} to=\"/privacy\" underline=\"hover\">\n                    Privacy Policy\n                  </MuiLink>\n                </Typography>\n              }\n              sx={{ mt: 2 }}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={loading || !!success}\n            >\n              {loading ? <CircularProgress size={24} /> : 'Sign Up'}\n            </Button>\n\n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Typography variant=\"body2\">\n                Already have an account?{' '}\n                <MuiLink component={Link} to=\"/login\" underline=\"hover\">\n                  Login\n                </MuiLink>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Container>\n    </MainLayout>\n  );\n};\n\nexport default Signup;\n"],"names":["Signup","supabase","useSupabase","navigate","useNavigate","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","agreeTerms","setAgreeTerms","loading","setLoading","error","setError","success","setSuccess","handleSignup","e","authService.signUp","err","MainLayout","jsx","Container","jsxs","Paper","Typography","Alert","Box","TextField","InputAdornment","IconButton","VisibilityOff","Visibility","FormControlLabel","Checkbox","MuiLink","Link","Button","CircularProgress"],"mappings":"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"}