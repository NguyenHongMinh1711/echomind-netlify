{"version":3,"file":"ChatHistory-BVi8tZIQ.js","sources":["../../src/pages/ChatHistory.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  IconButton,\n  TextField,\n  InputAdornment,\n  CircularProgress,\n  Paper,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Snackbar,\n  Alert\n} from '@mui/material';\nimport {\n  Chat as ChatIcon,\n  Search as SearchIcon,\n  Delete as DeleteIcon,\n  Add as AddIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport MainLayout from '../layouts/MainLayout';\nimport { chat } from '../services/chatService';\n\ninterface ChatSession {\n  id: string;\n  title: string;\n  created_at: string;\n  updated_at: string;\n  last_message?: string;\n  last_message_timestamp?: string;\n}\n\nconst ChatHistory: React.FC = () => {\n  const navigate = useNavigate();\n\n  const [chatSessions, setChatSessions] = useState<ChatSession[]>([]);\n  const [filteredSessions, setFilteredSessions] = useState<ChatSession[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [sessionToDelete, setSessionToDelete] = useState<string | null>(null);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\n\n  useEffect(() => {\n    fetchChatSessions();\n  }, []);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredSessions(chatSessions);\n    } else {\n      const filtered = chatSessions.filter(session =>\n        session.title.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n      setFilteredSessions(filtered);\n    }\n  }, [searchQuery, chatSessions]);\n\n  const fetchChatSessions = async () => {\n    try {\n      setLoading(true);\n      const sessions = await chat.getChatSessions();\n      setChatSessions(sessions);\n      setFilteredSessions(sessions);\n    } catch (error) {\n      console.error('Error fetching chat sessions:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to load chat history',\n        severity: 'error'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleOpenDeleteDialog = (e: React.MouseEvent, sessionId: string) => {\n    e.stopPropagation();\n    setSessionToDelete(sessionId);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n    setSessionToDelete(null);\n  };\n\n  const handleDeleteSession = async () => {\n    if (!sessionToDelete) return;\n\n    try {\n      await chat.deleteChatSession(sessionToDelete);\n\n      // Update the local state\n      setChatSessions(prev => prev.filter(session => session.id !== sessionToDelete));\n\n      setSnackbar({\n        open: true,\n        message: 'Conversation deleted successfully',\n        severity: 'success'\n      });\n    } catch (error) {\n      console.error('Error deleting chat session:', error);\n      setSnackbar({\n        open: true,\n        message: 'Failed to delete conversation',\n        severity: 'error'\n      });\n    } finally {\n      handleCloseDeleteDialog();\n    }\n  };\n\n  const handleContinueChat = (sessionId: string) => {\n    navigate(`/chat/${sessionId}`);\n  };\n\n  const handleStartNewChat = () => {\n    navigate('/chat');\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n\n  if (loading) {\n    return (\n      <MainLayout>\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}>\n          <CircularProgress />\n        </Box>\n      </MainLayout>\n    );\n  }\n\n  return (\n    <MainLayout>\n      <Box sx={{ height: 'calc(100vh - 120px)', display: 'flex', flexDirection: 'column' }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n          <Typography variant=\"h4\" component=\"h1\">\n            Conversation History\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={handleStartNewChat}\n          >\n            New Conversation\n          </Button>\n        </Box>\n\n        <Paper sx={{ mb: 3, p: 1 }}>\n          <TextField\n            fullWidth\n            placeholder=\"Search conversations...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            size=\"small\"\n          />\n        </Paper>\n\n        {filteredSessions.length === 0 ? (\n          <Paper sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {searchQuery.trim() !== ''\n                ? 'No conversations match your search.'\n                : 'You haven\\'t started any conversations yet.'}\n            </Typography>\n            {searchQuery.trim() === '' && (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ mt: 2 }}\n                onClick={handleStartNewChat}\n              >\n                Start a Conversation\n              </Button>\n            )}\n          </Paper>\n        ) : (\n          <List sx={{ bgcolor: 'background.paper', flexGrow: 1, overflow: 'auto' }}>\n            {filteredSessions.map((session, index) => (\n              <React.Fragment key={session.id}>\n                <ListItem\n                  alignItems=\"flex-start\"\n                  button\n                  onClick={() => handleContinueChat(session.id)}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={(e) => handleOpenDeleteDialog(e, session.id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemAvatar>\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\n                      <ChatIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={session.title}\n                    secondary={\n                      <React.Fragment>\n                        {`Last updated ${formatDate(session.updated_at || session.created_at)}`}\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n                {index < filteredSessions.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n              </React.Fragment>\n            ))}\n          </List>\n        )}\n\n        {/* Delete Confirmation Dialog */}\n        <Dialog\n          open={deleteDialogOpen}\n          onClose={handleCloseDeleteDialog}\n        >\n          <DialogTitle>Delete Conversation</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to delete this conversation? This action cannot be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseDeleteDialog}>Cancel</Button>\n            <Button onClick={handleDeleteSession} color=\"error\">Delete</Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* Snackbar for notifications */}\n        <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\n          <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </MainLayout>\n  );\n};\n\nexport default ChatHistory;\n"],"names":["ChatHistory","navigate","useNavigate","chatSessions","setChatSessions","useState","filteredSessions","setFilteredSessions","searchQuery","setSearchQuery","loading","setLoading","deleteDialogOpen","setDeleteDialogOpen","sessionToDelete","setSessionToDelete","snackbar","setSnackbar","useEffect","fetchChatSessions","filtered","session","sessions","chat","error","handleOpenDeleteDialog","e","sessionId","handleCloseDeleteDialog","handleDeleteSession","prev","handleContinueChat","handleStartNewChat","formatDate","dateString","MainLayout","jsx","Box","CircularProgress","jsxs","Typography","Button","AddIcon","Paper","TextField","InputAdornment","SearchIcon","List","index","React","ListItem","IconButton","DeleteIcon","ListItemAvatar","Avatar","ChatIcon","ListItemText","Divider","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Snackbar","Alert"],"mappings":"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"}